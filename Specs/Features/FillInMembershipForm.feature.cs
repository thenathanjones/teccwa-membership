// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Filling in membership form")]
    public partial class FillingInMembershipFormFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FillInMembershipForm.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Filling in membership form", "In order to renew or start my membership\r\nAs a potential TECCWA member\r\nI want to" +
                    " be able to submit a membership application", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("All the required sections are present")]
        public virtual void AllTheRequiredSectionsArePresent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("All the required sections are present", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on the home page");
#line 9
 testRunner.Then("the title is \"TECCWA Membership Form\"");
#line 10
 testRunner.And("I should see \"Contact Details\"");
#line 11
 testRunner.And("I should see \"Dietary/Medical Alerts\"");
#line 12
 testRunner.And("I should see \"Emergency Contacts\"");
#line 13
 testRunner.And("I should see \"Vehicle Details\"");
#line 14
 testRunner.And("I should see \"Payment Details\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user must enter all required details")]
        public virtual void TheUserMustEnterAllRequiredDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user must enter all required details", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I am on the home page");
#line 18
 testRunner.And("I press \"Send\"");
#line 19
 testRunner.Then("I should be on the home page");
#line 20
 testRunner.Then("I should see the error \"Title is required\"");
#line 21
 testRunner.And("I should see the error \"First Name is required\"");
#line 22
 testRunner.And("I should see the error \"Surname is required\"");
#line 23
 testRunner.And("I should see the error \"Street Number is required\"");
#line 24
 testRunner.And("I should see the error \"Street Name is required\"");
#line 25
 testRunner.And("I should see the error \"Postcode is required\"");
#line 26
 testRunner.And("I should see the error \"Contact Phone Number is required\"");
#line 27
 testRunner.And("I should see the error \"E-Mail Address is required\"");
#line 28
 testRunner.And("I should see the error \"D.O.B. is required\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user must enter a valid email address")]
        public virtual void TheUserMustEnterAValidEmailAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user must enter a valid email address", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("I am on the home page");
#line 32
 testRunner.Then("I fill in \"E-Mail Address\" with \"wrongemail\"");
#line 33
 testRunner.And("I press \"Send\"");
#line 34
 testRunner.Then("I should see the error \"E-Mail Address is not valid\"");
#line 35
 testRunner.Then("I fill in \"E-Mail Address\" with \"valid@email.com\"");
#line 36
 testRunner.And("I press \"Send\"");
#line 37
 testRunner.Then("I should not see the error \"E-Mail Address is not valid\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
